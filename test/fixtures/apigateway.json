{
  "openapi": "3.0.0",
  "info": {
    "title": "test_project",
    "version": "2.3.0"
  },
  "servers": [
    {
      "url": "https://proxyserver.com",
      "description": "Proxied server"
    }
  ],
  "tags": [
    {
      "name": "Defect",
      "description": "Centralises all information on a defect"
    },
    {
      "name": "ReportV1"
    },
    {
      "name": "Report",
      "description": "Handles all information about a report"
    },
    {
      "name": "WMSIndex",
      "description": "Dedicated to the management of batch numbers and delivery numbers"
    },
    {
      "name": "Image"
    },
    {
      "name": "User",
      "description": "Describes a user of the app"
    },
    {
      "name": "DefectV1"
    },
    {
      "name": "ImageV1"
    },
    {
      "name": "ConfigV1"
    },
    {
      "name": "WMSIndexV1"
    },
    {
      "name": "WMSIndexUpdateDate"
    },
    {
      "name": "Config"
    }
  ],
  "paths": {
    "/v2/defects/{id}/mask": {
      "put": {
        "tags": [
          "Defect"
        ],
        "description": "Hide or show the defect in database.",
        "operationId": "putV2DefectsByIdMask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDefect"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultBooleanValueObject"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "PUT",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/defects/{id}/mask"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/defects/{id}/mask",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v1/reports/print": {
      "get": {
        "tags": [
          "ReportV1"
        ],
        "description": "Print a list of reports and bundle them in a zip",
        "operationId": "printReportsV1",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/print"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/zip": {}
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/print",
          "requestParameters": {}
        }
      }
    },
    "/v2/reports": {
      "get": {
        "tags": [
          "Report"
        ],
        "description": "Fetches all reports that match the parameters provided by the client.\r\n\r\nâš  When updating this route, also consider https://pericles.applidium.com/projects/52/routes/1194",
        "operationId": "getV2Reports",
        "parameters": [
          {
            "name": "is_archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "section",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reporter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subsidiary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orientation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_current_user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReportSearch"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports"
        }
      },
      "post": {
        "tags": [
          "Report"
        ],
        "description": "Creates a new report which will follow the classic workflow.\r\n\r\nIf you want to create a new report with a direct supplier return, please use https://pericles.applidium.com/projects/52/routes/1184",
        "operationId": "postV2Reports",
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReport"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReport"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports"
        }
      },
      "delete": {
        "tags": [
          "Report"
        ],
        "description": "This route can be used only by roles carrying this kind :\r\n* `LECTEUR_H`;\r\n* `ANIMATEUR_QUALITE`.\r\n\r\nYou may use query param with id (ie : ?id=id1&id2) to specify which reports you are willing to delete.",
        "operationId": "deleteV2Reports",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportReference"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "DELETE",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports",
          "requestParameters": {}
        }
      }
    },
    "/v2/reports/{id}": {
      "get": {
        "tags": [
          "Report"
        ],
        "description": "Aims at getting all information on a specific report",
        "operationId": "getV2ReportsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}"
        }
      },
      "put": {
        "tags": [
          "Report"
        ],
        "description": "Updates report's information.",
        "operationId": "putV2ReportsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReport"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatedReport"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "PUT",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/reports/{id}/archive": {
      "post": {
        "tags": [
          "Report"
        ],
        "description": "Archive the report.",
        "operationId": "postV2ReportsByIdArchive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}/archive"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}/archive",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/reports/{id}/print": {
      "get": {
        "tags": [
          "Report"
        ],
        "description": "Sends back the URL for PDF download",
        "operationId": "getV2ReportsByIdPrint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}/print"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/pdf": {}
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}/print",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/WMSIndex/{id}": {
      "get": {
        "tags": [
          "WMSIndex"
        ],
        "description": "Aims at getting all products that match with the provided `batch_number`\r\nor `delivery_number`. This route is also able to get all the information about a single product if a `SKU` is provided.",
        "operationId": "getV2WmsindexById",
        "parameters": [
          {
            "name": "index_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultWMSIndex"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/WMSIndex/{id}"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/WMSIndex/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/defects/{id}": {
      "get": {
        "tags": [
          "Defect"
        ],
        "operationId": "getV2DefectsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectForDatabase"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/defects/{id}"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/defects/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/defects": {
      "get": {
        "tags": [
          "Defect"
        ],
        "description": "Fetches all defects present in the database",
        "operationId": "getV2Defects",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subsidiary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orientation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "defect_category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reporter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDefectSearch"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/defects"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/defects",
          "requestParameters": {}
        }
      }
    },
    "/v2/images": {
      "post": {
        "tags": [
          "Image"
        ],
        "description": "This route is responsible to persist images in the server.\r\n\r\nInput: The binary to persist.",
        "operationId": "postV2Images",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultImage"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/images",
          "contentHandling": "CONVERT_TO_BINARY"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/images",
          "requestParameters": {}
        }
      }
    },
    "/v2/reports/{id}/review": {
      "post": {
        "tags": [
          "Report"
        ],
        "description": "Update the report and change its status to `reviewed`.",
        "operationId": "postV2ReportsByIdReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReport"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatedReportV1"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}/review"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/{id}/review",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/reports/direct_supplier_return": {
      "post": {
        "tags": [
          "Report"
        ],
        "description": "Creates a new report with :\r\n* `status` = `reviewed`\r\n* `orientation` = `direct_supplier_return`\r\n\r\nSo the created report will not pass through the classic workflow but directly be reviewed.",
        "operationId": "postV2ReportsDirectsupplierreturn",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReport"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReport"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/direct_supplier_return"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/direct_supplier_return",
          "requestParameters": {}
        }
      }
    },
    "/v2/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Role `LECTEUR_H` only.",
        "operationId": "getV2UsersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultUser"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/users/{id}"
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Role `LECTEUR_H` only.",
        "operationId": "putV2UsersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultUser"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "PUT",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/users/{id}"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/users/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/reports/references": {
      "get": {
        "tags": [
          "Report"
        ],
        "description": "Fetches all report references that match the parameters provided by the client.\r\n\r\nâš  When updating this route, also consider https://pericles.applidium.com/projects/52/routes/1041",
        "operationId": "getV2ReportsReferences",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "only_current_user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "orientation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subsidiary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "section",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reporter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportReference"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/references"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/references",
          "requestParameters": {}
        }
      }
    },
    "/v1/reports": {
      "get": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "getV1Reports",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReportSearchV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports"
        }
      },
      "post": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "postV1Reports",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReportV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports",
          "requestParameters": {}
        }
      }
    },
    "/v1/reports/{id}": {
      "get": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "getV1ReportsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReportV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}"
        }
      },
      "put": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "putV1ReportsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReportV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "PUT",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v1/reports/{id}/print": {
      "get": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "getV1ReportsByIdPrint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}/print"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/pdf": {}
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}/print",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/users": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Role `LECTEUR_H` only.",
        "operationId": "postV2Users",
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReference"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/users"
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "description": "Role `LECTEUR_H` only.",
        "operationId": "getV2Users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "site",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultUserSearch"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/users"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/users",
          "requestParameters": {}
        }
      }
    },
    "/v1/reports/{id}/archive": {
      "post": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "postV1ReportsByIdArchive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReportV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}/archive"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}/archive",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v1/defects": {
      "get": {
        "tags": [
          "DefectV1"
        ],
        "operationId": "getV1Defects",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDefectSearchV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/defects"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/defects",
          "requestParameters": {}
        }
      }
    },
    "/v1/defects/{id}/mask": {
      "put": {
        "tags": [
          "DefectV1"
        ],
        "operationId": "putV1DefectsByIdMask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDefectV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "PUT",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/defects/{id}/mask"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/defects/{id}/mask",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v1/images": {
      "post": {
        "tags": [
          "ImageV1"
        ],
        "operationId": "postV1Images",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultImageV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/images",
          "contentHandling": "CONVERT_TO_BINARY"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/images",
          "requestParameters": {}
        }
      }
    },
    "/v1/config": {
      "get": {
        "tags": [
          "ConfigV1"
        ],
        "operationId": "getV1Config",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultConfigV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/config"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/config",
          "requestParameters": {}
        }
      }
    },
    "/v1/reports/csv": {
      "get": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "getV1ReportsCsv",
        "parameters": [
          {
            "name": "subsidiary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transaction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/csv"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/csv": {}
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/csv",
          "requestParameters": {}
        }
      }
    },
    "/v1/reports/direct_supplier_return": {
      "post": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "postV1ReportsDirectsupplierreturn",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReportV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/direct_supplier_return"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/direct_supplier_return",
          "requestParameters": {}
        }
      }
    },
    "/v1/reports/references": {
      "get": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "getV1ReportsReferences",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportReferenceV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/references"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/references",
          "requestParameters": {}
        }
      }
    },
    "/v1/WMSIndex/{id}": {
      "get": {
        "tags": [
          "WMSIndexV1"
        ],
        "operationId": "getV1WmsindexById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultWMSIndexV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/WMSIndex/{id}"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/WMSIndex/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/WMSIndex/info": {
      "get": {
        "tags": [
          "WMSIndexUpdateDate"
        ],
        "operationId": "getV2WmsindexInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultWMSIndexUpdateDate"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/WMSIndex/info"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/WMSIndex/info",
          "requestParameters": {}
        }
      }
    },
    "/v2/config": {
      "get": {
        "tags": [
          "Config"
        ],
        "description": "Triggered on start up of the iPad app and web application, aims at fetching all stable information defined in the Config object.\r\n\r\nIf the user is not registered in database, returns a 401. Otherwise, returns the config.\r\nSame request for both web app and mobile app, so app-specific control must be managed in the specific app.",
        "operationId": "getV2Config",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultConfig"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/config"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/config",
          "requestParameters": {}
        }
      }
    },
    "/v1/defects/{id}": {
      "get": {
        "tags": [
          "DefectV1"
        ],
        "operationId": "getV1DefectsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefectForDatabaseV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/defects/{id}"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/defects/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/v2/reports/csv": {
      "get": {
        "tags": [
          "Report"
        ],
        "description": "Export all reports in CSV format.\r\n\r\nâš  It gives directly the content of the CSV, not a Json. But we cannot set this format in PÃ©riclÃ¨s âš ",
        "operationId": "getV2ReportsCsv",
        "parameters": [
          {
            "name": "transaction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subsidiary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/csv"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/csv": {}
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/csv",
          "requestParameters": {}
        }
      }
    },
    "/v2/reports/print": {
      "get": {
        "tags": [
          "Report"
        ],
        "description": "Print a list of reports and bundle them in a zip",
        "operationId": "printReports",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [],
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {},
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/print"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/zip": {}
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v2/reports/print",
          "requestParameters": {}
        }
      }
    },
    "/v1/reports/{id}/review": {
      "post": {
        "tags": [
          "ReportV1"
        ],
        "operationId": "postV1ReportsByIdReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultReportV1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadCredentialsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cognito": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "cacheKeyParameters": [
            "integration.request.path.id"
          ],
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "timeoutInMillis": null,
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}/review"
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "enable cors by returning correct headers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {},
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "OPTIONS",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/htag/v1/reports/{id}/review",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "healthcheck path",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/actuator/health",
          "requestParameters": {}
        }
      }
    },
    "/version": {
      "get": {
        "summary": "version path",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": "29000",
          "type": "http_proxy",
          "uri": "${URL_HTAG}/actuator/info",
          "requestParameters": {}
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DefaultUser": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/DefaultRole"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/DefaultSupplier"
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultSubsidiary"
            }
          },
          "profile_picture_URL": {
            "type": "string",
            "format": "uri",
            "description": "URL where the user's profile picture can be fetched",
            "nullable": true
          },
          "atlas_id": {
            "type": "string",
            "description": "Contains the ADFS identifier used by the employee when signing in through Amazon Cognito"
          },
          "site": {
            "type": "string",
            "enum": [
              "bobigny",
              "deret"
            ],
            "description": "Describes where the user works. Is null if the user has a role of Fournisseur",
            "nullable": true
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "atlas_id",
          "email",
          "firstname",
          "id",
          "lastname",
          "profile_picture_URL",
          "role",
          "site",
          "subsidiaries",
          "supplier"
        ],
        "title": "User - DefaultUser",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultSubsidiary": {
        "title": "Subsidiary - DefaultSubsidiary",
        "type": "object",
        "properties": {
          "one_letter_code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1,
            "description": "1-letter code used in order to label the reports"
          },
          "is_bobigny": {
            "type": "boolean",
            "description": "If set to true, subsidiary is checked at Bobigny, otherwise at Deret's premises in Saran"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "is_bobigny",
          "name",
          "one_letter_code"
        ]
      },
      "DefaultSupplier": {
        "title": "Supplier - DefaultSupplier",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name"
        ]
      },
      "DefaultProduct": {
        "title": "Product - DefaultProduct",
        "type": "object",
        "properties": {
          "subsidiary": {
            "$ref": "#/components/schemas/DefaultSubsidiary"
          },
          "season": {
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/DefaultSupplier"
          },
          "picture_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "SKU": {
            "type": "string"
          },
          "item_designation": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "SKU",
          "id",
          "item_designation",
          "picture_url",
          "season",
          "subsidiary",
          "supplier"
        ]
      },
      "DefaultLocation": {
        "title": "Location - DefaultLocation",
        "type": "object",
        "properties": {
          "picture_URL": {
            "type": "string",
            "format": "uri",
            "description": "Picture that is used as a reference when the user wants to locate the defect.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the location"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "picture_URL"
        ]
      },
      "DefaultDefect": {
        "type": "object",
        "properties": {
          "is_masked_by": {
            "$ref": "#/components/schemas/UserForFilterPurposes"
          },
          "location": {
            "$ref": "#/components/schemas/DefaultLocation"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefaultDefectType"
          },
          "selected_zone": {
            "$ref": "#/components/schemas/DefaultZone"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Contains all URLs of pictures without drawing, picture are at their initial size. Used for future purposes (detect defects thanks to AI)"
          },
          "defect_category": {
            "$ref": "#/components/schemas/DefaultDefectCategory"
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri",
            "description": "Contains the picture (orange dot touched by the user on the schematic representation of the item).",
            "nullable": true
          },
          "is_visible": {
            "type": "boolean",
            "description": "Sets visibility in the photo gallery"
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "comment",
          "defect_category",
          "id",
          "is_masked_by",
          "is_visible",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "selected_defect_type",
          "selected_zone"
        ],
        "title": "Defect - DefaultDefect",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultReport": {
        "type": "object",
        "properties": {
          "reviewed_at": {
            "type": "string",
            "description": "Date when the reviewer validated the review (`POST /report/:id/review`)",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DefaultStatus"
          },
          "product": {
            "$ref": "#/components/schemas/DefaultProduct"
          },
          "craftsman_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "defect": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultDefect"
            },
            "description": "Can be null as process configured says : 1. create report 2. create defects linked to report.",
            "nullable": true
          },
          "report_code": {
            "type": "string",
            "description": "Matches the pattern used by HermÃ¨s in order to label the report : letter matching the subsidiary-XX (2 digits for the year)-XXXX(Number of the report for the given year, for the given subsidiary)"
          },
          "is_archived": {
            "type": "boolean",
            "description": "true if user that declared the defect transferred the report to \"Archive\", false otherwise."
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "description": "Comment is left by the report's reviewer, which is `LECTEUR_H` or `ANIMATEUR_QUALITE`. Consult the Role resource webpage for further details",
            "nullable": true
          },
          "user_rules": {
            "$ref": "#/components/schemas/UserForFilterPurposes"
          },
          "user_declares": {
            "$ref": "#/components/schemas/UserForFilterPurposes"
          },
          "updated_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "orientation": {
            "$ref": "#/components/schemas/DefaultOrientation"
          },
          "is_open": {
            "type": "boolean"
          },
          "delivery_number": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "batch_number": {
            "type": "string",
            "nullable": true
          },
          "ILPN": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "product_quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "ILPN",
          "batch_number",
          "comment",
          "craftsman_code",
          "created_at",
          "defect",
          "delivery_number",
          "id",
          "is_archived",
          "is_open",
          "orientation",
          "product",
          "product_quantity",
          "report_code",
          "reviewed_at",
          "status",
          "updated_at",
          "user_declares",
          "user_rules"
        ],
        "title": "Report - DefaultReport",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultDefectType": {
        "title": "DefectType - DefaultDefectType",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Name of the defect type"
          },
          "code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "code",
          "id",
          "type"
        ]
      },
      "DefaultOrientation": {
        "title": "Orientation - DefaultOrientation",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Complete name of the orientation in English"
          },
          "code": {
            "type": "string",
            "enum": [
              "firstChoice",
              "secondChoice",
              "directSupplierReturn",
              "supplierReturn",
              "destruction"
            ],
            "description": "orientation code "
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "code",
          "name"
        ]
      },
      "DefaultZone": {
        "title": "Zone - DefaultZone",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the zone"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name"
        ]
      },
      "DefaultConfig": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Current version of the application"
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultStatus"
            }
          },
          "reporter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserForConfig"
            }
          },
          "user": {
            "$ref": "#/components/schemas/UserForConfig"
          },
          "defect_category": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefectCategoryConfig"
            }
          },
          "subsidiary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsidiaryForConfig"
            }
          },
          "orientation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultOrientation"
            }
          },
          "supplier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultSupplier"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "defect_category",
          "orientation",
          "reporter",
          "status",
          "subsidiary",
          "supplier",
          "user",
          "version"
        ],
        "title": "Config - DefaultConfig",
        "description": "Automatically generated (please edit me)"
      },
      "UserForFilterPurposes": {
        "title": "User - UserForFilterPurposes",
        "type": "object",
        "properties": {
          "profile_picture_URL": {
            "type": "string",
            "format": "uri",
            "description": "URL where the user's profile picture can be fetched",
            "nullable": true
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "firstname",
          "id",
          "lastname",
          "profile_picture_URL"
        ]
      },
      "SubsidiaryWithoutWarehouse": {
        "title": "Subsidiary - SubsidiaryWithoutWarehouse",
        "type": "object",
        "properties": {
          "one_letter_code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1,
            "description": "1-letter code used in order to label the reports"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "one_letter_code"
        ]
      },
      "UserForConfig": {
        "title": "User - UserForConfig",
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/DefaultRole"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/DefaultSupplier"
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsidiaryForConfig"
            }
          },
          "site": {
            "type": "string",
            "enum": [
              "bobigny",
              "deret"
            ],
            "description": "Describes where the user works. Is null if the user has a role of Fournisseur",
            "nullable": true
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "email",
          "firstname",
          "id",
          "lastname",
          "role",
          "site",
          "subsidiaries",
          "supplier"
        ]
      },
      "LocationWithoutPicture": {
        "title": "Location - LocationWithoutPicture",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the location"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ]
      },
      "ReportForBaseOfDefects": {
        "title": "Report - ReportForBaseOfDefects",
        "type": "object",
        "properties": {
          "reviewed_at": {
            "type": "string",
            "description": "Date when the reviewer validated the review (`POST /report/:id/review`)",
            "nullable": true
          },
          "created_at": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DefaultStatus"
          },
          "report_code": {
            "type": "string",
            "description": "Matches the pattern used by HermÃ¨s in order to label the report : letter matching the subsidiary-XX (2 digits for the year)-XXXX(Number of the report for the given year, for the given subsidiary)"
          },
          "user_rules": {
            "$ref": "#/components/schemas/UserForFilterPurposes"
          },
          "user_declares": {
            "$ref": "#/components/schemas/UserForFilterPurposes"
          },
          "updated_at": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/DefaultProduct"
          },
          "orientation": {
            "$ref": "#/components/schemas/DefaultOrientation"
          },
          "product_quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "created_at",
          "id",
          "orientation",
          "product",
          "product_quantity",
          "report_code",
          "reviewed_at",
          "status",
          "updated_at",
          "user_declares",
          "user_rules"
        ]
      },
      "DefectForDatabase": {
        "type": "object",
        "properties": {
          "is_masked_by": {
            "$ref": "#/components/schemas/UserForFilterPurposes"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefaultDefectType"
          },
          "location": {
            "$ref": "#/components/schemas/DefaultLocation"
          },
          "selected_zone": {
            "$ref": "#/components/schemas/DefaultZone"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Contains all URLs of pictures without drawing, picture are at their initial size. Used for future purposes (detect defects thanks to AI)"
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri",
            "description": "Contains the picture (orange dot touched by the user on the schematic representation of the item).",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "defect_category": {
            "$ref": "#/components/schemas/DefaultDefectCategory"
          },
          "report": {
            "$ref": "#/components/schemas/ReportForBaseOfDefects"
          },
          "is_visible": {
            "type": "boolean",
            "description": "Sets visibility in the photo gallery"
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "comment",
          "defect_category",
          "id",
          "is_masked_by",
          "is_visible",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "report",
          "selected_defect_type",
          "selected_zone"
        ],
        "title": "Defect - DefectForDatabase"
      },
      "ReportAsPDF": {
        "title": "Report - ReportAsPDF",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "NewReport": {
        "title": "Report - NewReport",
        "type": "object",
        "properties": {
          "defect": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatedDefect"
            },
            "description": "Can be null as process configured says : 1. create report 2. create defects linked to report.",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/DefaultProduct"
          },
          "craftsman_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "delivery_number": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "batch_number": {
            "type": "string",
            "nullable": true
          },
          "ILPN": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "product_quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999
          }
        },
        "additionalProperties": false,
        "required": [
          "ILPN",
          "batch_number",
          "craftsman_code",
          "defect",
          "delivery_number",
          "product",
          "product_quantity"
        ]
      },
      "UpdatedReport": {
        "title": "Report - UpdatedReport",
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/UpdatedProduct"
          },
          "craftsman_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "delivery_number": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "batch_number": {
            "type": "string",
            "nullable": true
          },
          "ILPN": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "product_quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999
          },
          "orientation": {
            "$ref": "#/components/schemas/OrientationReference"
          },
          "defect": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatedDefect"
            },
            "description": "Can be null as process configured says : 1. create report 2. create defects linked to report.",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "description": "Comment is left by the report's reviewer, which is `LECTEUR_H` or `ANIMATEUR_QUALITE`. Consult the Role resource webpage for further details",
            "nullable": true
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "ILPN",
          "batch_number",
          "comment",
          "craftsman_code",
          "defect",
          "delivery_number",
          "id",
          "orientation",
          "product",
          "product_quantity"
        ]
      },
      "UpdatedDefect": {
        "title": "Defect - UpdatedDefect",
        "type": "object",
        "properties": {
          "selected_zone": {
            "$ref": "#/components/schemas/ZoneReference"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefectTypeReference"
          },
          "location": {
            "$ref": "#/components/schemas/LocationReference"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Contains all URLs of pictures without drawing, picture are at their initial size. Used for future purposes (detect defects thanks to AI)"
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri",
            "description": "Contains the picture (orange dot touched by the user on the schematic representation of the item).",
            "nullable": true
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "comment",
          "id",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "selected_defect_type",
          "selected_zone"
        ]
      },
      "DefaultWMSIndex": {
        "type": "object",
        "properties": {
          "delivery_number": {
            "type": "string",
            "description": "DEPRECATED",
            "nullable": true
          },
          "batch_number": {
            "type": "string",
            "description": "DEPRECATED",
            "nullable": true
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductWithSubsidiaryWarehouse"
            }
          },
          "index_type": {
            "type": "string",
            "enum": [
              "batch_number",
              "delivery_number",
              "sku"
            ]
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "batch_number",
          "delivery_number",
          "id",
          "index_type",
          "product"
        ],
        "title": "WMSIndex - DefaultWMSIndex",
        "description": "Automatically generated (please edit me)"
      },
      "DefectTypeForNewDefect": {
        "title": "DefectType - DefectTypeForNewDefect",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "id"
        ]
      },
      "LocationForNewAndUpdateDefect": {
        "title": "Location - LocationForNewAndUpdateDefect",
        "type": "object",
        "properties": {
          "picture_URL": {
            "type": "string",
            "format": "uri",
            "description": "Picture that is used as a reference when the user wants to locate the defect.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the location"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "picture_URL"
        ]
      },
      "ProductWithSubsidiaryWarehouse": {
        "title": "Product - ProductWithSubsidiaryWarehouse",
        "type": "object",
        "properties": {
          "delivery_number": {
            "type": "string",
            "nullable": true
          },
          "batch_number": {
            "type": "string",
            "nullable": true
          },
          "season": {
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/DefaultSupplier"
          },
          "subsidiary": {
            "$ref": "#/components/schemas/DefaultSubsidiary"
          },
          "picture_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "SKU": {
            "type": "string"
          },
          "item_designation": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "SKU",
          "batch_number",
          "delivery_number",
          "id",
          "item_designation",
          "picture_url",
          "season",
          "subsidiary",
          "supplier"
        ]
      },
      "SubsidiaryForConfig": {
        "title": "Subsidiary - SubsidiaryForConfig",
        "type": "object",
        "properties": {
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationConfig"
            },
            "description": "List of all locations that are valid for this subsidiary"
          },
          "one_letter_code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1,
            "description": "1-letter code used in order to label the reports"
          },
          "is_bobigny": {
            "type": "boolean",
            "description": "If set to true, subsidiary is checked at Bobigny, otherwise at Deret's premises in Saran"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "is_bobigny",
          "location",
          "name",
          "one_letter_code"
        ]
      },
      "DefectTypeWithoutCode": {
        "title": "DefectType - DefectTypeWithoutCode",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Name of the defect type"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "type"
        ]
      },
      "DefaultDefectCategory": {
        "title": "DefectCategory - DefaultDefectCategory",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the defect category"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name"
        ]
      },
      "DefectForDetailedReport": {
        "title": "Defect - DefectForDetailedReport",
        "type": "object",
        "properties": {
          "selected_zone": {
            "$ref": "#/components/schemas/DefaultZone"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefectTypeWithoutCode"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Contains all URLs of pictures without drawing, picture are at their initial size. Used for future purposes (detect defects thanks to AI)"
          },
          "is_visible": {
            "type": "boolean",
            "description": "Sets visibility in the photo gallery"
          },
          "defect_category": {
            "$ref": "#/components/schemas/DefaultDefectCategory"
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri",
            "description": "Contains the picture (orange dot touched by the user on the schematic representation of the item).",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/LocationForNewAndUpdateDefect"
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "comment",
          "defect_category",
          "id",
          "is_visible",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "selected_defect_type",
          "selected_zone"
        ]
      },
      "DefectCategoryConfig": {
        "title": "DefectCategory - DefectCategoryConfig",
        "type": "object",
        "properties": {
          "defect_type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultDefectType"
            },
            "description": "All defect types linked to the category."
          },
          "name": {
            "type": "string",
            "description": "Name of the defect category"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "defect_type",
          "id",
          "name"
        ]
      },
      "LocationConfig": {
        "title": "Location - LocationConfig",
        "type": "object",
        "properties": {
          "zone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultZone"
            }
          },
          "picture_URL": {
            "type": "string",
            "format": "uri",
            "description": "Picture that is used as a reference when the user wants to locate the defect.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the location"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "picture_URL",
          "zone"
        ]
      },
      "DefaultReportSearch": {
        "type": "object",
        "properties": {
          "total_count": {
            "type": "integer",
            "minimum": 0
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultReport"
            }
          },
          "reports_ko": {
            "type": "integer",
            "nullable": true
          },
          "reports_ok": {
            "type": "integer",
            "nullable": true
          },
          "destructions": {
            "type": "integer",
            "nullable": true
          },
          "second_choices": {
            "type": "integer",
            "nullable": true
          },
          "return_supplier": {
            "type": "integer",
            "nullable": true
          },
          "first_choices": {
            "type": "integer",
            "nullable": true
          },
          "waiting_products": {
            "type": "integer",
            "nullable": true
          },
          "created_reports": {
            "type": "integer",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of results of the query, when ignoring pagination."
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "created_reports",
          "destructions",
          "first_choices",
          "reports_ko",
          "reports_ok",
          "results",
          "return_supplier",
          "second_choices",
          "total_count",
          "waiting_products"
        ],
        "title": "ReportSearch - DefaultReportSearch",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultDefectSearch": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of results"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefectForDatabase"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "results"
        ],
        "title": "DefectSearch - DefaultDefectSearch",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultStatus": {
        "title": "Status - DefaultStatus",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the status"
          },
          "code": {
            "type": "string",
            "enum": [
              "waitingForReview",
              "ongoingReview",
              "reviewed"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "code",
          "name"
        ]
      },
      "DefaultBooleanValueObject": {
        "title": "BooleanValueObject - DefaultBooleanValueObject",
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "value"
        ]
      },
      "LocationReference": {
        "title": "Location - LocationReference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "DefectCategoryReference": {
        "title": "DefectCategory - DefectCategoryReference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "DefectTypeReference": {
        "title": "DefectType - DefectTypeReference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "ZoneReference": {
        "title": "Zone - ZoneReference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "OrientationReference": {
        "title": "Orientation - OrientationReference",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "firstChoice",
              "secondChoice",
              "directSupplierReturn",
              "supplierReturn",
              "destruction"
            ],
            "description": "orientation code "
          }
        },
        "additionalProperties": false,
        "required": [
          "code"
        ]
      },
      "DefaultImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "url"
        ],
        "title": "Image - DefaultImage",
        "description": "Automatically generated (please edit me)"
      },
      "ReportReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "title": "Report - ReportReference"
      },
      "ReportReferenceSearch": {
        "title": "ReportSearch - ReportReferenceSearch",
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportReference"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "results"
        ]
      },
      "DefaultDefectCategoryV1": {
        "title": "DefectCategoryV1 - DefaultDefectCategoryV1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name"
        ]
      },
      "DefaultDefectTypeV1": {
        "title": "DefectTypeV1 - DefaultDefectTypeV1",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "code",
          "id",
          "type"
        ]
      },
      "DefectTypeForNewDefectV1": {
        "title": "DefectTypeV1 - DefectTypeForNewDefectV1",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "code",
          "id"
        ]
      },
      "DefectTypeWithoutCodeV1": {
        "title": "DefectTypeV1 - DefectTypeWithoutCodeV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "type"
        ]
      },
      "DefectTypeReferenceV1": {
        "title": "DefectTypeV1 - DefectTypeReferenceV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id"
        ]
      },
      "DefectCategoryConfigV1": {
        "title": "DefectCategoryV1 - DefectCategoryConfigV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "defect_type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultDefectTypeV1"
            }
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "defect_type",
          "id",
          "name"
        ]
      },
      "DefectCategoryReferenceV1": {
        "title": "DefectCategoryV1 - DefectCategoryReferenceV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id"
        ]
      },
      "DefaultOrientationV1": {
        "title": "OrientationV1 - DefaultOrientationV1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "firstChoice",
              "secondChoice",
              "directSupplierReturn",
              "supplierReturn",
              "destruction"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "code",
          "name"
        ]
      },
      "OrientationReferenceV1": {
        "title": "OrientationV1 - OrientationReferenceV1",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "firstChoice",
              "secondChoice",
              "directSupplierReturn",
              "supplierReturn",
              "destruction"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "code"
        ]
      },
      "DefaultStatusV1": {
        "title": "StatusV1 - DefaultStatusV1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "waitingForReview",
              "ongoingReview",
              "reviewed"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "code",
          "name"
        ]
      },
      "DefaultSubsidiaryV1": {
        "title": "SubsidiaryV1 - DefaultSubsidiaryV1",
        "type": "object",
        "properties": {
          "one_letter_code": {
            "type": "string"
          },
          "is_bobigny": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "is_bobigny",
          "name",
          "one_letter_code"
        ]
      },
      "SubsidiaryForConfigV1": {
        "title": "SubsidiaryV1 - SubsidiaryForConfigV1",
        "type": "object",
        "properties": {
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationConfigV1"
            }
          },
          "one_letter_code": {
            "type": "string"
          },
          "is_bobigny": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "is_bobigny",
          "location",
          "name",
          "one_letter_code"
        ]
      },
      "SubsidiaryWithoutWarehouseV1": {
        "title": "SubsidiaryV1 - SubsidiaryWithoutWarehouseV1",
        "type": "object",
        "properties": {
          "one_letter_code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "one_letter_code"
        ]
      },
      "DefaultLocationV1": {
        "title": "LocationV1 - DefaultLocationV1",
        "type": "object",
        "properties": {
          "picture_URL": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "picture_URL"
        ]
      },
      "LocationConfigV1": {
        "title": "LocationV1 - LocationConfigV1",
        "type": "object",
        "properties": {
          "zone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultZoneV1"
            }
          },
          "picture_URL": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "picture_URL",
          "zone"
        ]
      },
      "LocationReferenceV1": {
        "title": "LocationV1 - LocationReferenceV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id"
        ]
      },
      "LocationWithoutPictureV1": {
        "title": "LocationV1 - LocationWithoutPictureV1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name"
        ]
      },
      "LocationForNewAndUpdateDefectV1": {
        "title": "LocationV1 - LocationForNewAndUpdateDefectV1",
        "type": "object",
        "properties": {
          "picture_URL": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "picture_URL"
        ]
      },
      "DefaultZoneV1": {
        "title": "ZoneV1 - DefaultZoneV1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name"
        ]
      },
      "ZoneReferenceV1": {
        "title": "ZoneV1 - ZoneReferenceV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id"
        ]
      },
      "DefaultSupplierV1": {
        "title": "SupplierV1 - DefaultSupplierV1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name"
        ]
      },
      "DefaultUserV1": {
        "title": "UserV1 - DefaultUserV1",
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleWithWarehouseV1"
          },
          "token_expiration_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "site": {
            "type": "string",
            "enum": [
              "bobigny",
              "deret",
              "supplier"
            ],
            "nullable": true
          },
          "token": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "role",
          "site",
          "surname",
          "token",
          "token_expiration_timestamp"
        ]
      },
      "UserForFilterPurposesV1": {
        "title": "UserV1 - UserForFilterPurposesV1",
        "type": "object",
        "properties": {
          "profile_picture_URL": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "profile_picture_URL",
          "surname"
        ]
      },
      "UserForConfigV1": {
        "title": "UserV1 - UserForConfigV1",
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleForConfigV1"
          },
          "site": {
            "type": "string",
            "enum": [
              "bobigny",
              "deret",
              "supplier"
            ],
            "nullable": true
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "role",
          "site",
          "surname"
        ]
      },
      "DefaultRoleV1": {
        "title": "RoleV1 - DefaultRoleV1",
        "type": "object",
        "properties": {
          "subsidiary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsidiaryForConfigV1"
            }
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "subsidiary"
        ]
      },
      "RoleForConfigV1": {
        "title": "RoleV1 - RoleForConfigV1",
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "ANIMATEUR_QUALITE",
              "ENCADRANT_DERET",
              "CONTROLEUR_DERET",
              "CONTROLEUR_BOBIGNY",
              "METIER_DERET",
              "METIER_BOBIGNY"
            ]
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "kind",
          "name"
        ]
      },
      "RoleWithWarehouseV1": {
        "title": "RoleV1 - RoleWithWarehouseV1",
        "type": "object",
        "properties": {
          "subsidiary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsidiaryForConfigV1"
            }
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id",
          "name",
          "subsidiary"
        ]
      },
      "DefaultDefectV1": {
        "type": "object",
        "properties": {
          "is_masked_by": {
            "$ref": "#/components/schemas/UserForFilterPurposesV1"
          },
          "selected_zone": {
            "$ref": "#/components/schemas/DefaultZoneV1"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefaultDefectTypeV1"
          },
          "defect_category": {
            "$ref": "#/components/schemas/DefaultDefectCategoryV1"
          },
          "location": {
            "$ref": "#/components/schemas/DefaultLocationV1"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri"
          },
          "is_visible": {
            "type": "boolean"
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "comment",
          "defect_category",
          "id",
          "is_masked_by",
          "is_visible",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "selected_defect_type",
          "selected_zone"
        ],
        "title": "DefectV1 - DefaultDefectV1",
        "description": "Automatically generated (please edit me)"
      },
      "DefectForDetailedReportV1": {
        "title": "DefectV1 - DefectForDetailedReportV1",
        "type": "object",
        "properties": {
          "selected_zone": {
            "$ref": "#/components/schemas/DefaultZoneV1"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefectTypeWithoutCodeV1"
          },
          "defect_category": {
            "$ref": "#/components/schemas/DefaultDefectCategoryV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationForNewAndUpdateDefectV1"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri"
          },
          "is_visible": {
            "type": "boolean"
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "comment",
          "defect_category",
          "id",
          "is_visible",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "selected_defect_type",
          "selected_zone"
        ]
      },
      "ProductWithSubsidiaryWarehouseV1": {
        "title": "ProductV1 - ProductWithSubsidiaryWarehouseV1",
        "type": "object",
        "properties": {
          "subsidiary": {
            "$ref": "#/components/schemas/DefaultSubsidiaryV1"
          },
          "delivery_number": {
            "type": "string",
            "nullable": true
          },
          "batch_number": {
            "type": "string",
            "nullable": true
          },
          "season": {
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/DefaultSupplierV1"
          },
          "picture_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "SKU": {
            "type": "string"
          },
          "item_designation": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "SKU",
          "batch_number",
          "delivery_number",
          "id",
          "item_designation",
          "picture_url",
          "season",
          "subsidiary",
          "supplier"
        ]
      },
      "UpdatedDefectV1": {
        "title": "DefectV1 - UpdatedDefectV1",
        "type": "object",
        "properties": {
          "selected_zone": {
            "$ref": "#/components/schemas/ZoneReferenceV1"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefectTypeReferenceV1"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri"
          },
          "location": {
            "$ref": "#/components/schemas/LocationReferenceV1"
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "comment",
          "id",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "selected_defect_type",
          "selected_zone"
        ]
      },
      "DefectForDatabaseV1": {
        "type": "object",
        "properties": {
          "report": {
            "$ref": "#/components/schemas/ReportForBaseOfDefectsV1"
          },
          "is_masked_by": {
            "$ref": "#/components/schemas/UserForFilterPurposesV1"
          },
          "selected_zone": {
            "$ref": "#/components/schemas/DefaultZoneV1"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefaultDefectTypeV1"
          },
          "defect_category": {
            "$ref": "#/components/schemas/DefaultDefectCategoryV1"
          },
          "location": {
            "$ref": "#/components/schemas/DefaultLocationV1"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri"
          },
          "is_visible": {
            "type": "boolean"
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "comment",
          "defect_category",
          "id",
          "is_masked_by",
          "is_visible",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "report",
          "selected_defect_type",
          "selected_zone"
        ],
        "title": "DefectV1 - DefectForDatabaseV1",
        "description": "Automatically generated (please edit me)"
      },
      "NewDefectV1": {
        "title": "DefectV1 - NewDefectV1",
        "type": "object",
        "properties": {
          "selected_zone": {
            "$ref": "#/components/schemas/DefaultZoneV1"
          },
          "selected_defect_type": {
            "$ref": "#/components/schemas/DefaultDefectTypeV1"
          },
          "defect_category": {
            "$ref": "#/components/schemas/DefaultDefectCategoryV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationWithoutPictureV1"
          },
          "picture_without_drawing_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "picture_part_URL": {
            "type": "string",
            "format": "uri"
          },
          "picture_camera_URL": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "comment",
          "defect_category",
          "location",
          "picture_camera_URL",
          "picture_part_URL",
          "picture_without_drawing_URL",
          "selected_defect_type",
          "selected_zone"
        ]
      },
      "DefaultReportV1": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/DefaultProductV1"
          },
          "orientation": {
            "$ref": "#/components/schemas/DefaultOrientationV1"
          },
          "user_rules": {
            "$ref": "#/components/schemas/UserForFilterPurposesV1"
          },
          "user_declares": {
            "$ref": "#/components/schemas/UserForFilterPurposesV1"
          },
          "defect": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultDefectV1"
            },
            "nullable": true
          },
          "reviewed_at": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DefaultStatusV1"
          },
          "report_code": {
            "type": "string"
          },
          "is_archived": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "updated_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "is_open": {
            "type": "boolean"
          },
          "craftsman_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "delivery_number": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "batch_number": {
            "type": "string",
            "nullable": true
          },
          "ILPN": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "product_quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 977
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "ILPN",
          "batch_number",
          "comment",
          "craftsman_code",
          "created_at",
          "defect",
          "delivery_number",
          "id",
          "is_archived",
          "is_open",
          "orientation",
          "product",
          "product_quantity",
          "report_code",
          "reviewed_at",
          "status",
          "updated_at",
          "user_declares",
          "user_rules"
        ],
        "title": "ReportV1 - DefaultReportV1",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultImageV1": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "url"
        ],
        "title": "ImageV1 - DefaultImageV1",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultWMSIndexV1": {
        "type": "object",
        "properties": {
          "delivery_number": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductWithSubsidiaryWarehouseV1"
            }
          },
          "batch_number": {
            "type": "string",
            "nullable": true
          },
          "index_type": {
            "type": "string",
            "enum": [
              "batch_number",
              "delivery_number",
              "sku"
            ]
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "batch_number",
          "delivery_number",
          "id",
          "index_type",
          "product"
        ],
        "title": "WMSIndexV1 - DefaultWMSIndexV1",
        "description": "Automatically generated (please edit me)"
      },
      "ReportAsPdfV1": {
        "title": "ReportV1 - ReportAsPdfV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "id"
        ]
      },
      "ReportForBaseOfDefectsV1": {
        "title": "ReportV1 - ReportForBaseOfDefectsV1",
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/DefaultProductV1"
          },
          "orientation": {
            "$ref": "#/components/schemas/DefaultOrientationV1"
          },
          "user_rules": {
            "$ref": "#/components/schemas/UserForFilterPurposesV1"
          },
          "user_declares": {
            "$ref": "#/components/schemas/UserForFilterPurposesV1"
          },
          "reviewed_at": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DefaultStatusV1"
          },
          "report_code": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "product_quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 977
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "created_at",
          "id",
          "orientation",
          "product",
          "product_quantity",
          "report_code",
          "reviewed_at",
          "status",
          "updated_at",
          "user_declares",
          "user_rules"
        ]
      },
      "NewReportV1": {
        "title": "ReportV1 - NewReportV1",
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/DefaultProductV1"
          },
          "defect": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewDefectV1"
            },
            "nullable": true
          },
          "craftsman_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "delivery_number": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "batch_number": {
            "type": "string",
            "nullable": true
          },
          "ILPN": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11,
            "nullable": true
          },
          "product_quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 977
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "ILPN",
          "batch_number",
          "craftsman_code",
          "defect",
          "delivery_number",
          "product",
          "product_quantity"
        ]
      },
      "UpdatedReportV1": {
        "title": "ReportV1 - UpdatedReportV1",
        "type": "object",
        "properties": {
          "defect": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatedDefectV1"
            },
            "nullable": true
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "orientation": {
            "$ref": "#/components/schemas/OrientationReferenceV1"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "comment",
          "defect",
          "id",
          "orientation"
        ]
      },
      "ReportReferenceV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "title": "ReportV1 - ReportReferenceV1",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultProductV1": {
        "title": "ProductV1 - DefaultProductV1",
        "type": "object",
        "properties": {
          "subsidiary": {
            "$ref": "#/components/schemas/DefaultSubsidiaryV1"
          },
          "season": {
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/DefaultSupplierV1"
          },
          "picture_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "SKU": {
            "type": "string"
          },
          "item_designation": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "SKU",
          "id",
          "item_designation",
          "picture_url",
          "season",
          "subsidiary",
          "supplier"
        ]
      },
      "DefaultConfigV1": {
        "type": "object",
        "properties": {
          "orientation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultOrientationV1"
            }
          },
          "defect_category": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefectCategoryConfigV1"
            }
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultStatusV1"
            }
          },
          "reporter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserForConfigV1"
            }
          },
          "user": {
            "$ref": "#/components/schemas/UserForConfigV1"
          },
          "subsidiary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsidiaryForConfigV1"
            }
          },
          "supplier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultSupplierV1"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "defect_category",
          "orientation",
          "reporter",
          "status",
          "subsidiary",
          "supplier",
          "user",
          "version"
        ],
        "title": "ConfigV1 - DefaultConfigV1",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultDefectSearchV1": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefectForDatabaseV1"
            }
          },
          "count": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "results"
        ],
        "title": "DefectSearchV1 - DefaultDefectSearchV1",
        "description": "Automatically generated (please edit me)"
      },
      "DefaultReportSearchV1": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultReportV1"
            }
          },
          "waiting_products": {
            "type": "integer",
            "nullable": true
          },
          "total_count": {
            "type": "integer"
          },
          "second_choices": {
            "type": "integer",
            "nullable": true
          },
          "return_supplier": {
            "type": "integer",
            "nullable": true
          },
          "reports_ok": {
            "type": "integer",
            "nullable": true
          },
          "reports_ko": {
            "type": "integer",
            "nullable": true
          },
          "first_choices": {
            "type": "integer",
            "nullable": true
          },
          "destructions": {
            "type": "integer",
            "nullable": true
          },
          "created_reports": {
            "type": "integer",
            "nullable": true
          },
          "count": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "created_reports",
          "destructions",
          "first_choices",
          "reports_ko",
          "reports_ok",
          "results",
          "return_supplier",
          "second_choices",
          "total_count",
          "waiting_products"
        ],
        "title": "ReportSearchV1 - DefaultReportSearchV1",
        "description": "Automatically generated (please edit me)"
      },
      "ReportReferenceSearchV1": {
        "title": "ReportSearchV1 - ReportReferenceSearchV1",
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportReferenceV1"
            }
          }
        },
        "additionalProperties": false,
        "description": "Automatically generated (please edit me)",
        "required": [
          "results"
        ]
      },
      "DefaultUserSearch": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultUser"
            }
          },
          "count": {
            "type": "integer",
            "description": "Total results count"
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "results"
        ],
        "title": "UserSearch - DefaultUserSearch",
        "description": "Automatically generated (please edit me)"
      },
      "DefectReference": {
        "title": "Defect - DefectReference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "SubsidiaryReference": {
        "title": "Subsidiary - SubsidiaryReference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "DefaultRole": {
        "title": "Role - DefaultRole",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "ANIMATEUR_QUALITE",
              "ENCADRANT_DERET",
              "CONTROLEUR_DERET",
              "CONTROLEUR_BOBIGNY",
              "METIER_DERET",
              "METIER_BOBIGNY",
              "LECTEUR_H",
              "FOURNISSEUR",
              "DISABLED"
            ]
          },
          "name": {
            "type": "string",
            "description": "English name of the role"
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "name"
        ]
      },
      "RoleReference": {
        "title": "Role - RoleReference",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "ANIMATEUR_QUALITE",
              "ENCADRANT_DERET",
              "CONTROLEUR_DERET",
              "CONTROLEUR_BOBIGNY",
              "METIER_DERET",
              "METIER_BOBIGNY",
              "LECTEUR_H",
              "FOURNISSEUR",
              "DISABLED"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code"
        ]
      },
      "UpdatedProduct": {
        "title": "Product - UpdatedProduct",
        "type": "object",
        "properties": {
          "season": {
            "type": "string",
            "minLength": 4,
            "maxLength": 4,
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/DefaultSupplier"
          }
        },
        "additionalProperties": false,
        "required": [
          "season",
          "supplier"
        ]
      },
      "UserReference": {
        "type": "object",
        "properties": {
          "profile_picture_URL": {
            "type": "string",
            "format": "uri",
            "description": "URL where the user's profile picture can be fetched",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/RoleReference"
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsidiaryReference"
            }
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/DefaultSupplier"
          },
          "atlas_id": {
            "type": "string",
            "description": "Contains the ADFS identifier used by the employee when signing in through Amazon Cognito"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "atlas_id",
          "email",
          "firstname",
          "lastname",
          "profile_picture_URL",
          "role",
          "subsidiaries",
          "supplier"
        ],
        "title": "User - UserReference"
      },
      "DefaultWMSIndexUpdateDate": {
        "type": "object",
        "properties": {
          "updated_at": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "updated_at"
        ],
        "title": "WMSIndexUpdateDate - DefaultWMSIndexUpdateDate",
        "description": "Automatically generated (please edit me)"
      },
      "BadCredentialsError": {
        "type": "object",
        "required": [
          "code",
          "title"
        ],
        "properties": {
          "code": {
            "enum": [
              "bad_credentials"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "description": "Generated from Pericles with shasum 7de1da13ec1b301a59d61d1d42c0983592dcfb61"
      }
    },
    "securitySchemes": {
      "cognito": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "type": "cognito_user_pools",
          "providerARNs": [
            "${ARN_COGNITO_HTAG}"
          ]
        }
      }
    }
  },
  "x-amazon-apigateway-binary-media-types": [
    "image/*",
    "application/zip",
    "application/pdf"
  ]
}